[33mcommit 53f937aa75a7bae2e636068429e5ba39b80199f6[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: Tuan Vu <kiemsitocnoi@gmail.com>
Date:   Fri Feb 9 22:43:17 2018 +0700

    first commit

[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..3dd8a31[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# PerfumeStore[m

[33mcommit 7a24e1ae4433e31a34dcde6115fc9cd2dd1128fa[m
Author: Tuan Vu <kiemsitocnoi@gmail.com>
Date:   Fri Feb 9 22:40:46 2018 +0700

    test thu cai coi

[1mdiff --git a/build.xml b/build.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..65237c6[m
[1m--- /dev/null[m
[1m+++ b/build.xml[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<!-- You may freely edit this file. See commented blocks below for -->[m
[32m+[m[32m<!-- some examples of how to customize the build. -->[m
[32m+[m[32m<!-- (If you delete it and reopen the project it will be recreated.) -->[m
[32m+[m[32m<!-- By default, only the Clean and Build commands use this build script. -->[m
[32m+[m[32m<!-- Commands such as Run, Debug, and Test only use this build script if -->[m
[32m+[m[32m<!-- the Compile on Save feature is turned off for the project. -->[m
[32m+[m[32m<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->[m
[32m+[m[32m<!-- in the project's Project Properties dialog box.-->[m
[32m+[m[32m<project name="PerfumeProject" default="default" basedir=".">[m
[32m+[m[32m    <description>Builds, tests, and runs the project PerfumeProject.</description>[m
[32m+[m[32m    <import file="nbproject/build-impl.xml"/>[m
[32m+[m[32m    <!--[m
[32m+[m
[32m+[m[32m    There exist several targets which are by default empty and which can be[m[41m [m
[32m+[m[32m    used for execution of your tasks. These targets are usually executed[m[41m [m
[32m+[m[32m    before and after some main targets. They are:[m[41m [m
[32m+[m
[32m+[m[32m      -pre-init:                 called before initialization of project properties[m
[32m+[m[32m      -post-init:                called after initialization of project properties[m
[32m+[m[32m      -pre-compile:              called before javac compilation[m
[32m+[m[32m      -post-compile:             called after javac compilation[m
[32m+[m[32m      -pre-compile-single:       called before javac compilation of single file[m
[32m+[m[32m      -post-compile-single:      called after javac compilation of single file[m
[32m+[m[32m      -pre-compile-test:         called before javac compilation of JUnit tests[m
[32m+[m[32m      -post-compile-test:        called after javac compilation of JUnit tests[m
[32m+[m[32m      -pre-compile-test-single:  called before javac compilation of single JUnit test[m
[32m+[m[32m      -post-compile-test-single: called after javac compilation of single JUunit test[m
[32m+[m[32m      -pre-jar:                  called before JAR building[m
[32m+[m[32m      -post-jar:                 called after JAR building[m
[32m+[m[32m      -post-clean:               called after cleaning build products[m
[32m+[m
[32m+[m[32m    (Targets beginning with '-' are not intended to be called on their own.)[m
[32m+[m
[32m+[m[32m    Example of inserting an obfuscator after compilation could look like this:[m
[32m+[m
[32m+[m[32m        <target name="-post-compile">[m
[32m+[m[32m            <obfuscate>[m
[32m+[m[32m                <fileset dir="${build.classes.dir}"/>[m
[32m+[m[32m            </obfuscate>[m
[32m+[m[32m        </target>[m
[32m+[m
[32m+[m[32m    For list of available properties check the imported[m[41m [m
[32m+[m[32m    nbproject/build-impl.xml file.[m[41m [m
[32m+[m
[32m+[m
[32m+[m[32m    Another way to customize the build is by overriding existing main targets.[m
[32m+[m[32m    The targets of interest are:[m[41m [m
[32m+[m
[32m+[m[32m      -init-macrodef-javac:     defines macro for javac compilation[m
[32m+[m[32m      -init-macrodef-junit:     defines macro for junit execution[m
[32m+[m[32m      -init-macrodef-debug:     defines macro for class debugging[m
[32m+[m[32m      -init-macrodef-java:      defines macro for class execution[m
[32m+[m[32m      -do-jar:                  JAR building[m
[32m+[m[32m      run:                      execution of project[m[41m [m
[32m+[m[32m      -javadoc-build:           Javadoc generation[m
[32m+[m[32m      test-report:              JUnit report generation[m
[32m+[m
[32m+[m[32m    An example of overriding the target for project execution could look like this:[m
[32m+[m
[32m+[m[32m        <target name="run" depends="PerfumeProject-impl.jar">[m
[32m+[m[32m            <exec dir="bin" executable="launcher.exe">[m
[32m+[m[32m                <arg file="${dist.jar}"/>[m
[32m+[m[32m            </exec>[m
[32m+[m[32m        </target>[m
[32m+[m
[32m+[m[32m    Notice that the overridden target depends on the jar target and not only on[m[41m [m
[32m+[m[32m    the compile target as the regular run target does. Again, for a list of available[m[41m [m
[32m+[m[32m    properties which you can use, check the target you are overriding in the[m
[32m+[m[32m    nbproject/build-impl.xml file.[m[41m [m
[32m+[m
[32m+[m[32m    -->[m
[32m+[m[32m</project>[m
[1mdiff --git a/build/classes/.netbeans_automatic_build b/build/classes/.netbeans_automatic_build[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/build/classes/.netbeans_update_resources b/build/classes/.netbeans_update_resources[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/build/classes/gui/DemoReport$1.class b/build/classes/gui/DemoReport$1.class[m
[1mnew file mode 100644[m
[1mindex 0000000..326fa9e[m
Binary files /dev/null and b/build/classes/gui/DemoReport$1.class differ
[1mdiff --git a/build/classes/gui/DemoReport$2.class b/build/classes/gui/DemoReport$2.class[m
[1mnew file mode 100644[m
[1mindex 0000000..b520bbd[m
Binary files /dev/null and b/build/classes/gui/DemoReport$2.class differ
[1mdiff --git a/build/classes/gui/DemoReport.class b/build/classes/gui/DemoReport.class[m
[1mnew file mode 100644[m
[1mindex 0000000..f5d0946[m
Binary files /dev/null and b/build/classes/gui/DemoReport.class differ
[1mdiff --git a/build/classes/gui/DemoReport.form b/build/classes/gui/DemoReport.form[m
[1mnew file mode 100644[m
[1mindex 0000000..d926df5[m
[1m--- /dev/null[m
[1m+++ b/build/classes/gui/DemoReport.form[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8" ?>[m
[32m+[m
[32m+[m[32m<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">[m
[32m+[m[32m  <Properties>[m
[32m+[m[32m    <Property name="defaultCloseOperation" type="int" value="3"/>[m
[32m+[m[32m  </Properties>[m
[32m+[m[32m  <SyntheticProperties>[m
[32m+[m[32m    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>[m
[32m+[m[32m    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>[m
[32m+[m[32m  </SyntheticProperties>[m
[32m+[m[32m  <AuxValues>[m
[32m+[m[32m    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>[m
[32m+[m[32m    <AuxValue name="FormSetti